//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("accountingModel", "FK_account_currency", "currency", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.currency), "account", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.account), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_account_entity", "entity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.entity), "account", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.account), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_account_lu_catType", "lu_catType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.lu_catType), "account", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.account), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_transaction_account", "account", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.account), "transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.transaction), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_order_address", "address", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.address), "order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.order), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_card_entity", "entity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.entity), "card", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.card), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_card_lu_cardType", "lu_cardType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.lu_cardType), "card", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.card), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_ccCard_card", "card", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.card), "ccCard", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.ccCard), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_debitCard_card", "card", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.card), "debitCard", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.debitCard), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_entityCard_card", "card", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.card), "entityCard", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.entityCard), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_externalTransfer_card", "card", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.card), "externalTransfer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.externalTransfer), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_carrier_organization", "organization", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.organization), "carrier", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.carrier), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_carrierContact_carrier", "carrier", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.carrier), "carrierContact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.carrierContact), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_order_carrier", "carrier", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.carrier), "order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.order), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_carrierContact_contact", "contact", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.contact), "carrierContact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.carrierContact), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_ccCard_lu_ccCardType", "lu_ccCardType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.lu_ccCardType), "ccCard", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.ccCard), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_contact_lu_contactType", "lu_contactType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.lu_contactType), "contact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.contact), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_creditTransfer_externalTransfer", "externalTransfer", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.externalTransfer), "creditTransfer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.creditTransfer), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_currency_lu_currencyType", "lu_currencyType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.lu_currencyType), "currency", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.currency), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_invoice_currency", "currency", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.currency), "invoice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.invoice), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_transfer_currency", "currency", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.currency), "transfer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.transfer), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_customer_organization", "organization", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.organization), "customer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.customer), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_debitCard_lu_ccCardType", "lu_ccCardType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.lu_ccCardType), "debitCard", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.debitCard), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_debitTransfer_externalTransfer", "externalTransfer", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.externalTransfer), "debitTransfer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.debitTransfer), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_deliverable_lu_deliverableType", "lu_deliverableType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.lu_deliverableType), "deliverable", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.deliverable), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_deliverable_supplier", "supplier", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.supplier), "deliverable", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.deliverable), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_orderDetail_deliverable", "deliverable", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.deliverable), "orderDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.orderDetail), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_product_deliverable", "deliverable", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.deliverable), "product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.product), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_service_deliverable", "deliverable", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.deliverable), "service", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.service), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_entityCard_entity", "entity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.entity), "entityCard", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.entityCard), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_externalTransfer_entity", "entity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.entity), "externalTransfer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.externalTransfer), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_invoice_entity", "entity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.entity), "invoice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.invoice), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_invoice_entity1", "entity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.entity), "invoice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.invoice), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_order_entity", "entity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.entity), "order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.order), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_order_entity1", "entity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.entity), "order", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.order), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_organization_entity", "entity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.entity), "organization", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.organization), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_person_entity", "entity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.entity), "person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.person), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_transfer_entity", "entity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.entity), "transfer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.transfer), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_transfer_entity1", "entity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.entity), "transfer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.transfer), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_externalTransfer_transfer", "transfer", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.transfer), "externalTransfer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.externalTransfer), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_internalTransfer_transfer", "transfer", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.transfer), "internalTransfer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.internalTransfer), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_invoiceTransfer_invoice", "invoice", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.invoice), "invoiceTransfer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.invoiceTransfer), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_invoiceAction_lu_invoiceStatus", "lu_invoiceStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.lu_invoiceStatus), "invoiceAction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.invoiceAction), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_invoiceAction_sysAction", "sysAction", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.sysAction), "invoiceAction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.invoiceAction), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_invoiceTransfer_transfer", "transfer", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.transfer), "invoiceTransfer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.invoiceTransfer), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_lu_catType_lu_glType", "lu_glType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.lu_glType), "lu_catType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.lu_catType), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_transferAction_lu_transferStatus", "lu_transferStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.lu_transferStatus), "transferAction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.transferAction), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_transfer_lu_transferType", "lu_transferType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.lu_transferType), "transfer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.transfer), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_supplier_organization", "organization", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.organization), "supplier", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.supplier), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_user_person", "person", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.person), "user", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.user), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_sysActionTransaction_sysAction", "sysAction", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.sysAction), "sysActionTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.sysActionTransaction), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_transferAction_sysAction", "sysAction", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.sysAction), "transferAction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.transferAction), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_sysActionTransaction_transaction", "transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.transaction), "sysActionTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.sysActionTransaction), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_entity_lu_entityType", "lu_entityType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.lu_entityType), "entity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.entity), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_externalTransfer_lu_externalTsfrType", "lu_externalTsfrType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.lu_externalTsfrType), "externalTransfer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.externalTransfer), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_transfer_entity2", "entity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.entity), "transfer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.transfer), true)]
[assembly: EdmRelationshipAttribute("accountingModel", "FK_sysAction_lu_sysActionType", "lu_sysActionType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Project.Models.lu_sysActionType), "sysAction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Project.Models.sysAction), true)]

#endregion

namespace Project.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class accountingEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new accountingEntities object using the connection string found in the 'accountingEntities' section of the application configuration file.
        /// </summary>
        public accountingEntities() : base("name=accountingEntities", "accountingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new accountingEntities object.
        /// </summary>
        public accountingEntities(string connectionString) : base(connectionString, "accountingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new accountingEntities object.
        /// </summary>
        public accountingEntities(EntityConnection connection) : base(connection, "accountingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<account> accounts
        {
            get
            {
                if ((_accounts == null))
                {
                    _accounts = base.CreateObjectSet<account>("accounts");
                }
                return _accounts;
            }
        }
        private ObjectSet<account> _accounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<address> addresses
        {
            get
            {
                if ((_addresses == null))
                {
                    _addresses = base.CreateObjectSet<address>("addresses");
                }
                return _addresses;
            }
        }
        private ObjectSet<address> _addresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<card> cards
        {
            get
            {
                if ((_cards == null))
                {
                    _cards = base.CreateObjectSet<card>("cards");
                }
                return _cards;
            }
        }
        private ObjectSet<card> _cards;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<carrier> carriers
        {
            get
            {
                if ((_carriers == null))
                {
                    _carriers = base.CreateObjectSet<carrier>("carriers");
                }
                return _carriers;
            }
        }
        private ObjectSet<carrier> _carriers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<carrierContact> carrierContacts
        {
            get
            {
                if ((_carrierContacts == null))
                {
                    _carrierContacts = base.CreateObjectSet<carrierContact>("carrierContacts");
                }
                return _carrierContacts;
            }
        }
        private ObjectSet<carrierContact> _carrierContacts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ccCard> ccCards
        {
            get
            {
                if ((_ccCards == null))
                {
                    _ccCards = base.CreateObjectSet<ccCard>("ccCards");
                }
                return _ccCards;
            }
        }
        private ObjectSet<ccCard> _ccCards;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<contact> contacts
        {
            get
            {
                if ((_contacts == null))
                {
                    _contacts = base.CreateObjectSet<contact>("contacts");
                }
                return _contacts;
            }
        }
        private ObjectSet<contact> _contacts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<creditTransfer> creditTransfers
        {
            get
            {
                if ((_creditTransfers == null))
                {
                    _creditTransfers = base.CreateObjectSet<creditTransfer>("creditTransfers");
                }
                return _creditTransfers;
            }
        }
        private ObjectSet<creditTransfer> _creditTransfers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<currency> currencies
        {
            get
            {
                if ((_currencies == null))
                {
                    _currencies = base.CreateObjectSet<currency>("currencies");
                }
                return _currencies;
            }
        }
        private ObjectSet<currency> _currencies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<customer> customers
        {
            get
            {
                if ((_customers == null))
                {
                    _customers = base.CreateObjectSet<customer>("customers");
                }
                return _customers;
            }
        }
        private ObjectSet<customer> _customers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<debitCard> debitCards
        {
            get
            {
                if ((_debitCards == null))
                {
                    _debitCards = base.CreateObjectSet<debitCard>("debitCards");
                }
                return _debitCards;
            }
        }
        private ObjectSet<debitCard> _debitCards;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<debitTransfer> debitTransfers
        {
            get
            {
                if ((_debitTransfers == null))
                {
                    _debitTransfers = base.CreateObjectSet<debitTransfer>("debitTransfers");
                }
                return _debitTransfers;
            }
        }
        private ObjectSet<debitTransfer> _debitTransfers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<deliverable> deliverables
        {
            get
            {
                if ((_deliverables == null))
                {
                    _deliverables = base.CreateObjectSet<deliverable>("deliverables");
                }
                return _deliverables;
            }
        }
        private ObjectSet<deliverable> _deliverables;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<entity> entities
        {
            get
            {
                if ((_entities == null))
                {
                    _entities = base.CreateObjectSet<entity>("entities");
                }
                return _entities;
            }
        }
        private ObjectSet<entity> _entities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<entityCard> entityCards
        {
            get
            {
                if ((_entityCards == null))
                {
                    _entityCards = base.CreateObjectSet<entityCard>("entityCards");
                }
                return _entityCards;
            }
        }
        private ObjectSet<entityCard> _entityCards;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<externalTransfer> externalTransfers
        {
            get
            {
                if ((_externalTransfers == null))
                {
                    _externalTransfers = base.CreateObjectSet<externalTransfer>("externalTransfers");
                }
                return _externalTransfers;
            }
        }
        private ObjectSet<externalTransfer> _externalTransfers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<internalTransfer> internalTransfers
        {
            get
            {
                if ((_internalTransfers == null))
                {
                    _internalTransfers = base.CreateObjectSet<internalTransfer>("internalTransfers");
                }
                return _internalTransfers;
            }
        }
        private ObjectSet<internalTransfer> _internalTransfers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<invoice> invoices
        {
            get
            {
                if ((_invoices == null))
                {
                    _invoices = base.CreateObjectSet<invoice>("invoices");
                }
                return _invoices;
            }
        }
        private ObjectSet<invoice> _invoices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<invoiceAction> invoiceActions
        {
            get
            {
                if ((_invoiceActions == null))
                {
                    _invoiceActions = base.CreateObjectSet<invoiceAction>("invoiceActions");
                }
                return _invoiceActions;
            }
        }
        private ObjectSet<invoiceAction> _invoiceActions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<invoiceTransfer> invoiceTransfers
        {
            get
            {
                if ((_invoiceTransfers == null))
                {
                    _invoiceTransfers = base.CreateObjectSet<invoiceTransfer>("invoiceTransfers");
                }
                return _invoiceTransfers;
            }
        }
        private ObjectSet<invoiceTransfer> _invoiceTransfers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<lu_cardType> lu_cardType
        {
            get
            {
                if ((_lu_cardType == null))
                {
                    _lu_cardType = base.CreateObjectSet<lu_cardType>("lu_cardType");
                }
                return _lu_cardType;
            }
        }
        private ObjectSet<lu_cardType> _lu_cardType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<lu_catType> lu_catType
        {
            get
            {
                if ((_lu_catType == null))
                {
                    _lu_catType = base.CreateObjectSet<lu_catType>("lu_catType");
                }
                return _lu_catType;
            }
        }
        private ObjectSet<lu_catType> _lu_catType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<lu_ccCardType> lu_ccCardType
        {
            get
            {
                if ((_lu_ccCardType == null))
                {
                    _lu_ccCardType = base.CreateObjectSet<lu_ccCardType>("lu_ccCardType");
                }
                return _lu_ccCardType;
            }
        }
        private ObjectSet<lu_ccCardType> _lu_ccCardType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<lu_contactType> lu_contactType
        {
            get
            {
                if ((_lu_contactType == null))
                {
                    _lu_contactType = base.CreateObjectSet<lu_contactType>("lu_contactType");
                }
                return _lu_contactType;
            }
        }
        private ObjectSet<lu_contactType> _lu_contactType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<lu_currencyType> lu_currencyType
        {
            get
            {
                if ((_lu_currencyType == null))
                {
                    _lu_currencyType = base.CreateObjectSet<lu_currencyType>("lu_currencyType");
                }
                return _lu_currencyType;
            }
        }
        private ObjectSet<lu_currencyType> _lu_currencyType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<lu_deliverableType> lu_deliverableType
        {
            get
            {
                if ((_lu_deliverableType == null))
                {
                    _lu_deliverableType = base.CreateObjectSet<lu_deliverableType>("lu_deliverableType");
                }
                return _lu_deliverableType;
            }
        }
        private ObjectSet<lu_deliverableType> _lu_deliverableType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<lu_glType> lu_glType
        {
            get
            {
                if ((_lu_glType == null))
                {
                    _lu_glType = base.CreateObjectSet<lu_glType>("lu_glType");
                }
                return _lu_glType;
            }
        }
        private ObjectSet<lu_glType> _lu_glType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<lu_invoiceStatus> lu_invoiceStatus
        {
            get
            {
                if ((_lu_invoiceStatus == null))
                {
                    _lu_invoiceStatus = base.CreateObjectSet<lu_invoiceStatus>("lu_invoiceStatus");
                }
                return _lu_invoiceStatus;
            }
        }
        private ObjectSet<lu_invoiceStatus> _lu_invoiceStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<lu_transferStatus> lu_transferStatus
        {
            get
            {
                if ((_lu_transferStatus == null))
                {
                    _lu_transferStatus = base.CreateObjectSet<lu_transferStatus>("lu_transferStatus");
                }
                return _lu_transferStatus;
            }
        }
        private ObjectSet<lu_transferStatus> _lu_transferStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<lu_transferType> lu_transferType
        {
            get
            {
                if ((_lu_transferType == null))
                {
                    _lu_transferType = base.CreateObjectSet<lu_transferType>("lu_transferType");
                }
                return _lu_transferType;
            }
        }
        private ObjectSet<lu_transferType> _lu_transferType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<order> orders
        {
            get
            {
                if ((_orders == null))
                {
                    _orders = base.CreateObjectSet<order>("orders");
                }
                return _orders;
            }
        }
        private ObjectSet<order> _orders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<orderDetail> orderDetails
        {
            get
            {
                if ((_orderDetails == null))
                {
                    _orderDetails = base.CreateObjectSet<orderDetail>("orderDetails");
                }
                return _orderDetails;
            }
        }
        private ObjectSet<orderDetail> _orderDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<organization> organizations
        {
            get
            {
                if ((_organizations == null))
                {
                    _organizations = base.CreateObjectSet<organization>("organizations");
                }
                return _organizations;
            }
        }
        private ObjectSet<organization> _organizations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<person> people
        {
            get
            {
                if ((_people == null))
                {
                    _people = base.CreateObjectSet<person>("people");
                }
                return _people;
            }
        }
        private ObjectSet<person> _people;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<product> products
        {
            get
            {
                if ((_products == null))
                {
                    _products = base.CreateObjectSet<product>("products");
                }
                return _products;
            }
        }
        private ObjectSet<product> _products;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<service> services
        {
            get
            {
                if ((_services == null))
                {
                    _services = base.CreateObjectSet<service>("services");
                }
                return _services;
            }
        }
        private ObjectSet<service> _services;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<supplier> suppliers
        {
            get
            {
                if ((_suppliers == null))
                {
                    _suppliers = base.CreateObjectSet<supplier>("suppliers");
                }
                return _suppliers;
            }
        }
        private ObjectSet<supplier> _suppliers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysAction> sysActions
        {
            get
            {
                if ((_sysActions == null))
                {
                    _sysActions = base.CreateObjectSet<sysAction>("sysActions");
                }
                return _sysActions;
            }
        }
        private ObjectSet<sysAction> _sysActions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysActionTransaction> sysActionTransactions
        {
            get
            {
                if ((_sysActionTransactions == null))
                {
                    _sysActionTransactions = base.CreateObjectSet<sysActionTransaction>("sysActionTransactions");
                }
                return _sysActionTransactions;
            }
        }
        private ObjectSet<sysActionTransaction> _sysActionTransactions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<transaction> transactions
        {
            get
            {
                if ((_transactions == null))
                {
                    _transactions = base.CreateObjectSet<transaction>("transactions");
                }
                return _transactions;
            }
        }
        private ObjectSet<transaction> _transactions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<transfer> transfers
        {
            get
            {
                if ((_transfers == null))
                {
                    _transfers = base.CreateObjectSet<transfer>("transfers");
                }
                return _transfers;
            }
        }
        private ObjectSet<transfer> _transfers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<transferAction> transferActions
        {
            get
            {
                if ((_transferActions == null))
                {
                    _transferActions = base.CreateObjectSet<transferAction>("transferActions");
                }
                return _transferActions;
            }
        }
        private ObjectSet<transferAction> _transferActions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<user> users
        {
            get
            {
                if ((_users == null))
                {
                    _users = base.CreateObjectSet<user>("users");
                }
                return _users;
            }
        }
        private ObjectSet<user> _users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<lu_entityType> lu_entityType
        {
            get
            {
                if ((_lu_entityType == null))
                {
                    _lu_entityType = base.CreateObjectSet<lu_entityType>("lu_entityType");
                }
                return _lu_entityType;
            }
        }
        private ObjectSet<lu_entityType> _lu_entityType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<lu_externalTsfrType> lu_externalTsfrType
        {
            get
            {
                if ((_lu_externalTsfrType == null))
                {
                    _lu_externalTsfrType = base.CreateObjectSet<lu_externalTsfrType>("lu_externalTsfrType");
                }
                return _lu_externalTsfrType;
            }
        }
        private ObjectSet<lu_externalTsfrType> _lu_externalTsfrType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<lu_sysActionType> lu_sysActionType
        {
            get
            {
                if ((_lu_sysActionType == null))
                {
                    _lu_sysActionType = base.CreateObjectSet<lu_sysActionType>("lu_sysActionType");
                }
                return _lu_sysActionType;
            }
        }
        private ObjectSet<lu_sysActionType> _lu_sysActionType;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the accounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaccounts(account account)
        {
            base.AddObject("accounts", account);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the addresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaddresses(address address)
        {
            base.AddObject("addresses", address);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the cards EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocards(card card)
        {
            base.AddObject("cards", card);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the carriers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocarriers(carrier carrier)
        {
            base.AddObject("carriers", carrier);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the carrierContacts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocarrierContacts(carrierContact carrierContact)
        {
            base.AddObject("carrierContacts", carrierContact);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ccCards EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToccCards(ccCard ccCard)
        {
            base.AddObject("ccCards", ccCard);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the contacts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocontacts(contact contact)
        {
            base.AddObject("contacts", contact);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the creditTransfers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocreditTransfers(creditTransfer creditTransfer)
        {
            base.AddObject("creditTransfers", creditTransfer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the currencies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocurrencies(currency currency)
        {
            base.AddObject("currencies", currency);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the customers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocustomers(customer customer)
        {
            base.AddObject("customers", customer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the debitCards EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTodebitCards(debitCard debitCard)
        {
            base.AddObject("debitCards", debitCard);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the debitTransfers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTodebitTransfers(debitTransfer debitTransfer)
        {
            base.AddObject("debitTransfers", debitTransfer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the deliverables EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTodeliverables(deliverable deliverable)
        {
            base.AddObject("deliverables", deliverable);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the entities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToentities(entity entity)
        {
            base.AddObject("entities", entity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the entityCards EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToentityCards(entityCard entityCard)
        {
            base.AddObject("entityCards", entityCard);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the externalTransfers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToexternalTransfers(externalTransfer externalTransfer)
        {
            base.AddObject("externalTransfers", externalTransfer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the internalTransfers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTointernalTransfers(internalTransfer internalTransfer)
        {
            base.AddObject("internalTransfers", internalTransfer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the invoices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToinvoices(invoice invoice)
        {
            base.AddObject("invoices", invoice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the invoiceActions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToinvoiceActions(invoiceAction invoiceAction)
        {
            base.AddObject("invoiceActions", invoiceAction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the invoiceTransfers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToinvoiceTransfers(invoiceTransfer invoiceTransfer)
        {
            base.AddObject("invoiceTransfers", invoiceTransfer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the lu_cardType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTolu_cardType(lu_cardType lu_cardType)
        {
            base.AddObject("lu_cardType", lu_cardType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the lu_catType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTolu_catType(lu_catType lu_catType)
        {
            base.AddObject("lu_catType", lu_catType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the lu_ccCardType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTolu_ccCardType(lu_ccCardType lu_ccCardType)
        {
            base.AddObject("lu_ccCardType", lu_ccCardType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the lu_contactType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTolu_contactType(lu_contactType lu_contactType)
        {
            base.AddObject("lu_contactType", lu_contactType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the lu_currencyType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTolu_currencyType(lu_currencyType lu_currencyType)
        {
            base.AddObject("lu_currencyType", lu_currencyType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the lu_deliverableType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTolu_deliverableType(lu_deliverableType lu_deliverableType)
        {
            base.AddObject("lu_deliverableType", lu_deliverableType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the lu_glType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTolu_glType(lu_glType lu_glType)
        {
            base.AddObject("lu_glType", lu_glType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the lu_invoiceStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTolu_invoiceStatus(lu_invoiceStatus lu_invoiceStatus)
        {
            base.AddObject("lu_invoiceStatus", lu_invoiceStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the lu_transferStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTolu_transferStatus(lu_transferStatus lu_transferStatus)
        {
            base.AddObject("lu_transferStatus", lu_transferStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the lu_transferType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTolu_transferType(lu_transferType lu_transferType)
        {
            base.AddObject("lu_transferType", lu_transferType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the orders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToorders(order order)
        {
            base.AddObject("orders", order);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the orderDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToorderDetails(orderDetail orderDetail)
        {
            base.AddObject("orderDetails", orderDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the organizations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToorganizations(organization organization)
        {
            base.AddObject("organizations", organization);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the people EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTopeople(person person)
        {
            base.AddObject("people", person);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the products EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToproducts(product product)
        {
            base.AddObject("products", product);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the services EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToservices(service service)
        {
            base.AddObject("services", service);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the suppliers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosuppliers(supplier supplier)
        {
            base.AddObject("suppliers", supplier);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysActions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysActions(sysAction sysAction)
        {
            base.AddObject("sysActions", sysAction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysActionTransactions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysActionTransactions(sysActionTransaction sysActionTransaction)
        {
            base.AddObject("sysActionTransactions", sysActionTransaction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the transactions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTotransactions(transaction transaction)
        {
            base.AddObject("transactions", transaction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the transfers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTotransfers(transfer transfer)
        {
            base.AddObject("transfers", transfer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the transferActions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTotransferActions(transferAction transferAction)
        {
            base.AddObject("transferActions", transferAction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTousers(user user)
        {
            base.AddObject("users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the lu_entityType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTolu_entityType(lu_entityType lu_entityType)
        {
            base.AddObject("lu_entityType", lu_entityType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the lu_externalTsfrType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTolu_externalTsfrType(lu_externalTsfrType lu_externalTsfrType)
        {
            base.AddObject("lu_externalTsfrType", lu_externalTsfrType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the lu_sysActionType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTolu_sysActionType(lu_sysActionType lu_sysActionType)
        {
            base.AddObject("lu_sysActionType", lu_sysActionType);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="accountingModel", Name="account")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class account : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new account object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static account Createaccount(global::System.Int32 id)
        {
            account account = new account();
            account.ID = id;
            return account;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String accountNo
        {
            get
            {
                return _accountNo;
            }
            set
            {
                OnaccountNoChanging(value);
                ReportPropertyChanging("accountNo");
                _accountNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("accountNo");
                OnaccountNoChanged();
            }
        }
        private global::System.String _accountNo;
        partial void OnaccountNoChanging(global::System.String value);
        partial void OnaccountNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> catTypeID
        {
            get
            {
                return _catTypeID;
            }
            set
            {
                OncatTypeIDChanging(value);
                ReportPropertyChanging("catTypeID");
                _catTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("catTypeID");
                OncatTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _catTypeID;
        partial void OncatTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OncatTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ownerEntityID
        {
            get
            {
                return _ownerEntityID;
            }
            set
            {
                OnownerEntityIDChanging(value);
                ReportPropertyChanging("ownerEntityID");
                _ownerEntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ownerEntityID");
                OnownerEntityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ownerEntityID;
        partial void OnownerEntityIDChanging(Nullable<global::System.Int32> value);
        partial void OnownerEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> currencyID
        {
            get
            {
                return _currencyID;
            }
            set
            {
                OncurrencyIDChanging(value);
                ReportPropertyChanging("currencyID");
                _currencyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("currencyID");
                OncurrencyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _currencyID;
        partial void OncurrencyIDChanging(Nullable<global::System.Int32> value);
        partial void OncurrencyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> balance
        {
            get
            {
                return _balance;
            }
            set
            {
                OnbalanceChanging(value);
                ReportPropertyChanging("balance");
                _balance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("balance");
                OnbalanceChanged();
            }
        }
        private Nullable<global::System.Decimal> _balance;
        partial void OnbalanceChanging(Nullable<global::System.Decimal> value);
        partial void OnbalanceChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_account_currency", "currency")]
        public currency currency
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<currency>("accountingModel.FK_account_currency", "currency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<currency>("accountingModel.FK_account_currency", "currency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<currency> currencyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<currency>("accountingModel.FK_account_currency", "currency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<currency>("accountingModel.FK_account_currency", "currency", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_account_entity", "entity")]
        public entity entity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("accountingModel.FK_account_entity", "entity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("accountingModel.FK_account_entity", "entity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<entity> entityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("accountingModel.FK_account_entity", "entity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<entity>("accountingModel.FK_account_entity", "entity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_account_lu_catType", "lu_catType")]
        public lu_catType lu_catType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_catType>("accountingModel.FK_account_lu_catType", "lu_catType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_catType>("accountingModel.FK_account_lu_catType", "lu_catType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<lu_catType> lu_catTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_catType>("accountingModel.FK_account_lu_catType", "lu_catType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<lu_catType>("accountingModel.FK_account_lu_catType", "lu_catType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_transaction_account", "transaction")]
        public EntityCollection<transaction> transactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<transaction>("accountingModel.FK_transaction_account", "transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<transaction>("accountingModel.FK_transaction_account", "transaction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="accountingModel", Name="address")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class address : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new address object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static address Createaddress(global::System.Int32 id)
        {
            address address = new address();
            address.ID = id;
            return address;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> countryID
        {
            get
            {
                return _countryID;
            }
            set
            {
                OncountryIDChanging(value);
                ReportPropertyChanging("countryID");
                _countryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("countryID");
                OncountryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _countryID;
        partial void OncountryIDChanging(Nullable<global::System.Int32> value);
        partial void OncountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> provinceID
        {
            get
            {
                return _provinceID;
            }
            set
            {
                OnprovinceIDChanging(value);
                ReportPropertyChanging("provinceID");
                _provinceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("provinceID");
                OnprovinceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _provinceID;
        partial void OnprovinceIDChanging(Nullable<global::System.Int32> value);
        partial void OnprovinceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> cityID
        {
            get
            {
                return _cityID;
            }
            set
            {
                OncityIDChanging(value);
                ReportPropertyChanging("cityID");
                _cityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cityID");
                OncityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _cityID;
        partial void OncityIDChanging(Nullable<global::System.Int32> value);
        partial void OncityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String streetNo
        {
            get
            {
                return _streetNo;
            }
            set
            {
                OnstreetNoChanging(value);
                ReportPropertyChanging("streetNo");
                _streetNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("streetNo");
                OnstreetNoChanged();
            }
        }
        private global::System.String _streetNo;
        partial void OnstreetNoChanging(global::System.String value);
        partial void OnstreetNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String aptNo
        {
            get
            {
                return _aptNo;
            }
            set
            {
                OnaptNoChanging(value);
                ReportPropertyChanging("aptNo");
                _aptNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("aptNo");
                OnaptNoChanged();
            }
        }
        private global::System.String _aptNo;
        partial void OnaptNoChanging(global::System.String value);
        partial void OnaptNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String postalcode
        {
            get
            {
                return _postalcode;
            }
            set
            {
                OnpostalcodeChanging(value);
                ReportPropertyChanging("postalcode");
                _postalcode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("postalcode");
                OnpostalcodeChanged();
            }
        }
        private global::System.String _postalcode;
        partial void OnpostalcodeChanging(global::System.String value);
        partial void OnpostalcodeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_order_address", "order")]
        public EntityCollection<order> orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<order>("accountingModel.FK_order_address", "order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<order>("accountingModel.FK_order_address", "order", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="accountingModel", Name="card")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class card : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new card object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static card Createcard(global::System.Int32 id)
        {
            card card = new card();
            card.ID = id;
            return card;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> entityID
        {
            get
            {
                return _entityID;
            }
            set
            {
                OnentityIDChanging(value);
                ReportPropertyChanging("entityID");
                _entityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("entityID");
                OnentityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _entityID;
        partial void OnentityIDChanging(Nullable<global::System.Int32> value);
        partial void OnentityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String cardNo
        {
            get
            {
                return _cardNo;
            }
            set
            {
                OncardNoChanging(value);
                ReportPropertyChanging("cardNo");
                _cardNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("cardNo");
                OncardNoChanged();
            }
        }
        private global::System.String _cardNo;
        partial void OncardNoChanging(global::System.String value);
        partial void OncardNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> expiryDate
        {
            get
            {
                return _expiryDate;
            }
            set
            {
                OnexpiryDateChanging(value);
                ReportPropertyChanging("expiryDate");
                _expiryDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("expiryDate");
                OnexpiryDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _expiryDate;
        partial void OnexpiryDateChanging(Nullable<global::System.DateTime> value);
        partial void OnexpiryDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> cardTypeID
        {
            get
            {
                return _cardTypeID;
            }
            set
            {
                OncardTypeIDChanging(value);
                ReportPropertyChanging("cardTypeID");
                _cardTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cardTypeID");
                OncardTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _cardTypeID;
        partial void OncardTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OncardTypeIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_card_entity", "entity")]
        public entity entity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("accountingModel.FK_card_entity", "entity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("accountingModel.FK_card_entity", "entity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<entity> entityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("accountingModel.FK_card_entity", "entity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<entity>("accountingModel.FK_card_entity", "entity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_card_lu_cardType", "lu_cardType")]
        public lu_cardType lu_cardType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_cardType>("accountingModel.FK_card_lu_cardType", "lu_cardType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_cardType>("accountingModel.FK_card_lu_cardType", "lu_cardType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<lu_cardType> lu_cardTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_cardType>("accountingModel.FK_card_lu_cardType", "lu_cardType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<lu_cardType>("accountingModel.FK_card_lu_cardType", "lu_cardType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_ccCard_card", "ccCard")]
        public EntityCollection<ccCard> ccCards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ccCard>("accountingModel.FK_ccCard_card", "ccCard");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ccCard>("accountingModel.FK_ccCard_card", "ccCard", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_debitCard_card", "debitCard")]
        public EntityCollection<debitCard> debitCards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<debitCard>("accountingModel.FK_debitCard_card", "debitCard");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<debitCard>("accountingModel.FK_debitCard_card", "debitCard", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_entityCard_card", "entityCard")]
        public EntityCollection<entityCard> entityCards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<entityCard>("accountingModel.FK_entityCard_card", "entityCard");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<entityCard>("accountingModel.FK_entityCard_card", "entityCard", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_externalTransfer_card", "externalTransfer")]
        public EntityCollection<externalTransfer> externalTransfers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<externalTransfer>("accountingModel.FK_externalTransfer_card", "externalTransfer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<externalTransfer>("accountingModel.FK_externalTransfer_card", "externalTransfer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="accountingModel", Name="carrier")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class carrier : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new carrier object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static carrier Createcarrier(global::System.Int32 id)
        {
            carrier carrier = new carrier();
            carrier.ID = id;
            return carrier;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> orgID
        {
            get
            {
                return _orgID;
            }
            set
            {
                OnorgIDChanging(value);
                ReportPropertyChanging("orgID");
                _orgID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("orgID");
                OnorgIDChanged();
            }
        }
        private Nullable<global::System.Int32> _orgID;
        partial void OnorgIDChanging(Nullable<global::System.Int32> value);
        partial void OnorgIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_carrier_organization", "organization")]
        public organization organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<organization>("accountingModel.FK_carrier_organization", "organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<organization>("accountingModel.FK_carrier_organization", "organization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<organization> organizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<organization>("accountingModel.FK_carrier_organization", "organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<organization>("accountingModel.FK_carrier_organization", "organization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_carrierContact_carrier", "carrierContact")]
        public EntityCollection<carrierContact> carrierContacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<carrierContact>("accountingModel.FK_carrierContact_carrier", "carrierContact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<carrierContact>("accountingModel.FK_carrierContact_carrier", "carrierContact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_order_carrier", "order")]
        public EntityCollection<order> orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<order>("accountingModel.FK_order_carrier", "order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<order>("accountingModel.FK_order_carrier", "order", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="accountingModel", Name="carrierContact")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class carrierContact : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new carrierContact object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static carrierContact CreatecarrierContact(global::System.Int32 id)
        {
            carrierContact carrierContact = new carrierContact();
            carrierContact.ID = id;
            return carrierContact;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> carrierID
        {
            get
            {
                return _carrierID;
            }
            set
            {
                OncarrierIDChanging(value);
                ReportPropertyChanging("carrierID");
                _carrierID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("carrierID");
                OncarrierIDChanged();
            }
        }
        private Nullable<global::System.Int32> _carrierID;
        partial void OncarrierIDChanging(Nullable<global::System.Int32> value);
        partial void OncarrierIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> contactID
        {
            get
            {
                return _contactID;
            }
            set
            {
                OncontactIDChanging(value);
                ReportPropertyChanging("contactID");
                _contactID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("contactID");
                OncontactIDChanged();
            }
        }
        private Nullable<global::System.Int32> _contactID;
        partial void OncontactIDChanging(Nullable<global::System.Int32> value);
        partial void OncontactIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_carrierContact_carrier", "carrier")]
        public carrier carrier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<carrier>("accountingModel.FK_carrierContact_carrier", "carrier").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<carrier>("accountingModel.FK_carrierContact_carrier", "carrier").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<carrier> carrierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<carrier>("accountingModel.FK_carrierContact_carrier", "carrier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<carrier>("accountingModel.FK_carrierContact_carrier", "carrier", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_carrierContact_contact", "contact")]
        public contact contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<contact>("accountingModel.FK_carrierContact_contact", "contact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<contact>("accountingModel.FK_carrierContact_contact", "contact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<contact> contactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<contact>("accountingModel.FK_carrierContact_contact", "contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<contact>("accountingModel.FK_carrierContact_contact", "contact", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="accountingModel", Name="ccCard")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ccCard : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ccCard object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static ccCard CreateccCard(global::System.Int32 id)
        {
            ccCard ccCard = new ccCard();
            ccCard.ID = id;
            return ccCard;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> cardID
        {
            get
            {
                return _cardID;
            }
            set
            {
                OncardIDChanging(value);
                ReportPropertyChanging("cardID");
                _cardID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cardID");
                OncardIDChanged();
            }
        }
        private Nullable<global::System.Int32> _cardID;
        partial void OncardIDChanging(Nullable<global::System.Int32> value);
        partial void OncardIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ccCardTypeID
        {
            get
            {
                return _ccCardTypeID;
            }
            set
            {
                OnccCardTypeIDChanging(value);
                ReportPropertyChanging("ccCardTypeID");
                _ccCardTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ccCardTypeID");
                OnccCardTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ccCardTypeID;
        partial void OnccCardTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnccCardTypeIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_ccCard_card", "card")]
        public card card
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<card>("accountingModel.FK_ccCard_card", "card").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<card>("accountingModel.FK_ccCard_card", "card").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<card> cardReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<card>("accountingModel.FK_ccCard_card", "card");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<card>("accountingModel.FK_ccCard_card", "card", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_ccCard_lu_ccCardType", "lu_ccCardType")]
        public lu_ccCardType lu_ccCardType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_ccCardType>("accountingModel.FK_ccCard_lu_ccCardType", "lu_ccCardType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_ccCardType>("accountingModel.FK_ccCard_lu_ccCardType", "lu_ccCardType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<lu_ccCardType> lu_ccCardTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_ccCardType>("accountingModel.FK_ccCard_lu_ccCardType", "lu_ccCardType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<lu_ccCardType>("accountingModel.FK_ccCard_lu_ccCardType", "lu_ccCardType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="accountingModel", Name="contact")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class contact : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new contact object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static contact Createcontact(global::System.Int32 id)
        {
            contact contact = new contact();
            contact.ID = id;
            return contact;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> contactTypeID
        {
            get
            {
                return _contactTypeID;
            }
            set
            {
                OncontactTypeIDChanging(value);
                ReportPropertyChanging("contactTypeID");
                _contactTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("contactTypeID");
                OncontactTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _contactTypeID;
        partial void OncontactTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OncontactTypeIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_carrierContact_contact", "carrierContact")]
        public EntityCollection<carrierContact> carrierContacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<carrierContact>("accountingModel.FK_carrierContact_contact", "carrierContact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<carrierContact>("accountingModel.FK_carrierContact_contact", "carrierContact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_contact_lu_contactType", "lu_contactType")]
        public lu_contactType lu_contactType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_contactType>("accountingModel.FK_contact_lu_contactType", "lu_contactType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_contactType>("accountingModel.FK_contact_lu_contactType", "lu_contactType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<lu_contactType> lu_contactTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_contactType>("accountingModel.FK_contact_lu_contactType", "lu_contactType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<lu_contactType>("accountingModel.FK_contact_lu_contactType", "lu_contactType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="accountingModel", Name="creditTransfer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class creditTransfer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new creditTransfer object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static creditTransfer CreatecreditTransfer(global::System.Int32 id)
        {
            creditTransfer creditTransfer = new creditTransfer();
            creditTransfer.ID = id;
            return creditTransfer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> externalTransferID
        {
            get
            {
                return _externalTransferID;
            }
            set
            {
                OnexternalTransferIDChanging(value);
                ReportPropertyChanging("externalTransferID");
                _externalTransferID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("externalTransferID");
                OnexternalTransferIDChanged();
            }
        }
        private Nullable<global::System.Int32> _externalTransferID;
        partial void OnexternalTransferIDChanging(Nullable<global::System.Int32> value);
        partial void OnexternalTransferIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_creditTransfer_externalTransfer", "externalTransfer")]
        public externalTransfer externalTransfer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<externalTransfer>("accountingModel.FK_creditTransfer_externalTransfer", "externalTransfer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<externalTransfer>("accountingModel.FK_creditTransfer_externalTransfer", "externalTransfer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<externalTransfer> externalTransferReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<externalTransfer>("accountingModel.FK_creditTransfer_externalTransfer", "externalTransfer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<externalTransfer>("accountingModel.FK_creditTransfer_externalTransfer", "externalTransfer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="accountingModel", Name="currency")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class currency : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new currency object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static currency Createcurrency(global::System.Int32 id)
        {
            currency currency = new currency();
            currency.ID = id;
            return currency;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> currencyTypeID
        {
            get
            {
                return _currencyTypeID;
            }
            set
            {
                OncurrencyTypeIDChanging(value);
                ReportPropertyChanging("currencyTypeID");
                _currencyTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("currencyTypeID");
                OncurrencyTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _currencyTypeID;
        partial void OncurrencyTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OncurrencyTypeIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_account_currency", "account")]
        public EntityCollection<account> accounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<account>("accountingModel.FK_account_currency", "account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<account>("accountingModel.FK_account_currency", "account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_currency_lu_currencyType", "lu_currencyType")]
        public lu_currencyType lu_currencyType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_currencyType>("accountingModel.FK_currency_lu_currencyType", "lu_currencyType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_currencyType>("accountingModel.FK_currency_lu_currencyType", "lu_currencyType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<lu_currencyType> lu_currencyTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_currencyType>("accountingModel.FK_currency_lu_currencyType", "lu_currencyType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<lu_currencyType>("accountingModel.FK_currency_lu_currencyType", "lu_currencyType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_invoice_currency", "invoice")]
        public EntityCollection<invoice> invoices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<invoice>("accountingModel.FK_invoice_currency", "invoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<invoice>("accountingModel.FK_invoice_currency", "invoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_transfer_currency", "transfer")]
        public EntityCollection<transfer> transfers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<transfer>("accountingModel.FK_transfer_currency", "transfer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<transfer>("accountingModel.FK_transfer_currency", "transfer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="accountingModel", Name="customer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class customer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new customer object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static customer Createcustomer(global::System.Int32 id)
        {
            customer customer = new customer();
            customer.ID = id;
            return customer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> orgID
        {
            get
            {
                return _orgID;
            }
            set
            {
                OnorgIDChanging(value);
                ReportPropertyChanging("orgID");
                _orgID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("orgID");
                OnorgIDChanged();
            }
        }
        private Nullable<global::System.Int32> _orgID;
        partial void OnorgIDChanging(Nullable<global::System.Int32> value);
        partial void OnorgIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_customer_organization", "organization")]
        public organization organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<organization>("accountingModel.FK_customer_organization", "organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<organization>("accountingModel.FK_customer_organization", "organization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<organization> organizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<organization>("accountingModel.FK_customer_organization", "organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<organization>("accountingModel.FK_customer_organization", "organization", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="accountingModel", Name="debitCard")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class debitCard : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new debitCard object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static debitCard CreatedebitCard(global::System.Int32 id)
        {
            debitCard debitCard = new debitCard();
            debitCard.ID = id;
            return debitCard;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> cardID
        {
            get
            {
                return _cardID;
            }
            set
            {
                OncardIDChanging(value);
                ReportPropertyChanging("cardID");
                _cardID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cardID");
                OncardIDChanged();
            }
        }
        private Nullable<global::System.Int32> _cardID;
        partial void OncardIDChanging(Nullable<global::System.Int32> value);
        partial void OncardIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ccCardTypeID
        {
            get
            {
                return _ccCardTypeID;
            }
            set
            {
                OnccCardTypeIDChanging(value);
                ReportPropertyChanging("ccCardTypeID");
                _ccCardTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ccCardTypeID");
                OnccCardTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ccCardTypeID;
        partial void OnccCardTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnccCardTypeIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_debitCard_card", "card")]
        public card card
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<card>("accountingModel.FK_debitCard_card", "card").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<card>("accountingModel.FK_debitCard_card", "card").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<card> cardReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<card>("accountingModel.FK_debitCard_card", "card");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<card>("accountingModel.FK_debitCard_card", "card", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_debitCard_lu_ccCardType", "lu_ccCardType")]
        public lu_ccCardType lu_ccCardType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_ccCardType>("accountingModel.FK_debitCard_lu_ccCardType", "lu_ccCardType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_ccCardType>("accountingModel.FK_debitCard_lu_ccCardType", "lu_ccCardType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<lu_ccCardType> lu_ccCardTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_ccCardType>("accountingModel.FK_debitCard_lu_ccCardType", "lu_ccCardType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<lu_ccCardType>("accountingModel.FK_debitCard_lu_ccCardType", "lu_ccCardType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="accountingModel", Name="debitTransfer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class debitTransfer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new debitTransfer object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static debitTransfer CreatedebitTransfer(global::System.Int32 id)
        {
            debitTransfer debitTransfer = new debitTransfer();
            debitTransfer.ID = id;
            return debitTransfer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> externalTransferID
        {
            get
            {
                return _externalTransferID;
            }
            set
            {
                OnexternalTransferIDChanging(value);
                ReportPropertyChanging("externalTransferID");
                _externalTransferID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("externalTransferID");
                OnexternalTransferIDChanged();
            }
        }
        private Nullable<global::System.Int32> _externalTransferID;
        partial void OnexternalTransferIDChanging(Nullable<global::System.Int32> value);
        partial void OnexternalTransferIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_debitTransfer_externalTransfer", "externalTransfer")]
        public externalTransfer externalTransfer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<externalTransfer>("accountingModel.FK_debitTransfer_externalTransfer", "externalTransfer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<externalTransfer>("accountingModel.FK_debitTransfer_externalTransfer", "externalTransfer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<externalTransfer> externalTransferReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<externalTransfer>("accountingModel.FK_debitTransfer_externalTransfer", "externalTransfer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<externalTransfer>("accountingModel.FK_debitTransfer_externalTransfer", "externalTransfer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="accountingModel", Name="deliverable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class deliverable : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new deliverable object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static deliverable Createdeliverable(global::System.Int32 id)
        {
            deliverable deliverable = new deliverable();
            deliverable.ID = id;
            return deliverable;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> deliverableTypeID
        {
            get
            {
                return _deliverableTypeID;
            }
            set
            {
                OndeliverableTypeIDChanging(value);
                ReportPropertyChanging("deliverableTypeID");
                _deliverableTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("deliverableTypeID");
                OndeliverableTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _deliverableTypeID;
        partial void OndeliverableTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OndeliverableTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> supplierID
        {
            get
            {
                return _supplierID;
            }
            set
            {
                OnsupplierIDChanging(value);
                ReportPropertyChanging("supplierID");
                _supplierID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("supplierID");
                OnsupplierIDChanged();
            }
        }
        private Nullable<global::System.Int32> _supplierID;
        partial void OnsupplierIDChanging(Nullable<global::System.Int32> value);
        partial void OnsupplierIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_deliverable_lu_deliverableType", "lu_deliverableType")]
        public lu_deliverableType lu_deliverableType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_deliverableType>("accountingModel.FK_deliverable_lu_deliverableType", "lu_deliverableType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_deliverableType>("accountingModel.FK_deliverable_lu_deliverableType", "lu_deliverableType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<lu_deliverableType> lu_deliverableTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_deliverableType>("accountingModel.FK_deliverable_lu_deliverableType", "lu_deliverableType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<lu_deliverableType>("accountingModel.FK_deliverable_lu_deliverableType", "lu_deliverableType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_deliverable_supplier", "supplier")]
        public supplier supplier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<supplier>("accountingModel.FK_deliverable_supplier", "supplier").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<supplier>("accountingModel.FK_deliverable_supplier", "supplier").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<supplier> supplierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<supplier>("accountingModel.FK_deliverable_supplier", "supplier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<supplier>("accountingModel.FK_deliverable_supplier", "supplier", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_orderDetail_deliverable", "orderDetail")]
        public EntityCollection<orderDetail> orderDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<orderDetail>("accountingModel.FK_orderDetail_deliverable", "orderDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<orderDetail>("accountingModel.FK_orderDetail_deliverable", "orderDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_product_deliverable", "product")]
        public EntityCollection<product> products
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<product>("accountingModel.FK_product_deliverable", "product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<product>("accountingModel.FK_product_deliverable", "product", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_service_deliverable", "service")]
        public EntityCollection<service> services
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<service>("accountingModel.FK_service_deliverable", "service");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<service>("accountingModel.FK_service_deliverable", "service", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="accountingModel", Name="entity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class entity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new entity object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static entity Createentity(global::System.Int32 id)
        {
            entity entity = new entity();
            entity.ID = id;
            return entity;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> entityTypeID
        {
            get
            {
                return _entityTypeID;
            }
            set
            {
                OnentityTypeIDChanging(value);
                ReportPropertyChanging("entityTypeID");
                _entityTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("entityTypeID");
                OnentityTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _entityTypeID;
        partial void OnentityTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnentityTypeIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_account_entity", "account")]
        public EntityCollection<account> accounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<account>("accountingModel.FK_account_entity", "account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<account>("accountingModel.FK_account_entity", "account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_card_entity", "card")]
        public EntityCollection<card> cards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<card>("accountingModel.FK_card_entity", "card");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<card>("accountingModel.FK_card_entity", "card", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_entityCard_entity", "entityCard")]
        public EntityCollection<entityCard> entityCards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<entityCard>("accountingModel.FK_entityCard_entity", "entityCard");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<entityCard>("accountingModel.FK_entityCard_entity", "entityCard", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_externalTransfer_entity", "externalTransfer")]
        public EntityCollection<externalTransfer> externalTransfers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<externalTransfer>("accountingModel.FK_externalTransfer_entity", "externalTransfer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<externalTransfer>("accountingModel.FK_externalTransfer_entity", "externalTransfer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_invoice_entity", "invoice")]
        public EntityCollection<invoice> invoices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<invoice>("accountingModel.FK_invoice_entity", "invoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<invoice>("accountingModel.FK_invoice_entity", "invoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_invoice_entity1", "invoice")]
        public EntityCollection<invoice> invoices1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<invoice>("accountingModel.FK_invoice_entity1", "invoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<invoice>("accountingModel.FK_invoice_entity1", "invoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_order_entity", "order")]
        public EntityCollection<order> orders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<order>("accountingModel.FK_order_entity", "order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<order>("accountingModel.FK_order_entity", "order", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_order_entity1", "order")]
        public EntityCollection<order> orders1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<order>("accountingModel.FK_order_entity1", "order");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<order>("accountingModel.FK_order_entity1", "order", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_organization_entity", "organization")]
        public EntityCollection<organization> organizations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<organization>("accountingModel.FK_organization_entity", "organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<organization>("accountingModel.FK_organization_entity", "organization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_person_entity", "person")]
        public EntityCollection<person> people
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<person>("accountingModel.FK_person_entity", "person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<person>("accountingModel.FK_person_entity", "person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_transfer_entity", "transfer")]
        public EntityCollection<transfer> transfers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<transfer>("accountingModel.FK_transfer_entity", "transfer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<transfer>("accountingModel.FK_transfer_entity", "transfer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_transfer_entity1", "transfer")]
        public EntityCollection<transfer> transfers1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<transfer>("accountingModel.FK_transfer_entity1", "transfer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<transfer>("accountingModel.FK_transfer_entity1", "transfer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_entity_lu_entityType", "lu_entityType")]
        public lu_entityType lu_entityType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_entityType>("accountingModel.FK_entity_lu_entityType", "lu_entityType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_entityType>("accountingModel.FK_entity_lu_entityType", "lu_entityType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<lu_entityType> lu_entityTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_entityType>("accountingModel.FK_entity_lu_entityType", "lu_entityType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<lu_entityType>("accountingModel.FK_entity_lu_entityType", "lu_entityType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_transfer_entity2", "transfer")]
        public EntityCollection<transfer> transfers2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<transfer>("accountingModel.FK_transfer_entity2", "transfer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<transfer>("accountingModel.FK_transfer_entity2", "transfer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="accountingModel", Name="entityCard")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class entityCard : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new entityCard object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static entityCard CreateentityCard(global::System.Int32 id)
        {
            entityCard entityCard = new entityCard();
            entityCard.ID = id;
            return entityCard;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> entityID
        {
            get
            {
                return _entityID;
            }
            set
            {
                OnentityIDChanging(value);
                ReportPropertyChanging("entityID");
                _entityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("entityID");
                OnentityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _entityID;
        partial void OnentityIDChanging(Nullable<global::System.Int32> value);
        partial void OnentityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> cardID
        {
            get
            {
                return _cardID;
            }
            set
            {
                OncardIDChanging(value);
                ReportPropertyChanging("cardID");
                _cardID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cardID");
                OncardIDChanged();
            }
        }
        private Nullable<global::System.Int32> _cardID;
        partial void OncardIDChanging(Nullable<global::System.Int32> value);
        partial void OncardIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_entityCard_card", "card")]
        public card card
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<card>("accountingModel.FK_entityCard_card", "card").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<card>("accountingModel.FK_entityCard_card", "card").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<card> cardReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<card>("accountingModel.FK_entityCard_card", "card");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<card>("accountingModel.FK_entityCard_card", "card", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_entityCard_entity", "entity")]
        public entity entity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("accountingModel.FK_entityCard_entity", "entity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("accountingModel.FK_entityCard_entity", "entity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<entity> entityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("accountingModel.FK_entityCard_entity", "entity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<entity>("accountingModel.FK_entityCard_entity", "entity", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="accountingModel", Name="externalTransfer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class externalTransfer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new externalTransfer object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static externalTransfer CreateexternalTransfer(global::System.Int32 id)
        {
            externalTransfer externalTransfer = new externalTransfer();
            externalTransfer.ID = id;
            return externalTransfer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> entityID
        {
            get
            {
                return _entityID;
            }
            set
            {
                OnentityIDChanging(value);
                ReportPropertyChanging("entityID");
                _entityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("entityID");
                OnentityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _entityID;
        partial void OnentityIDChanging(Nullable<global::System.Int32> value);
        partial void OnentityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> transferID
        {
            get
            {
                return _transferID;
            }
            set
            {
                OntransferIDChanging(value);
                ReportPropertyChanging("transferID");
                _transferID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("transferID");
                OntransferIDChanged();
            }
        }
        private Nullable<global::System.Int32> _transferID;
        partial void OntransferIDChanging(Nullable<global::System.Int32> value);
        partial void OntransferIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> cardID
        {
            get
            {
                return _cardID;
            }
            set
            {
                OncardIDChanging(value);
                ReportPropertyChanging("cardID");
                _cardID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("cardID");
                OncardIDChanged();
            }
        }
        private Nullable<global::System.Int32> _cardID;
        partial void OncardIDChanging(Nullable<global::System.Int32> value);
        partial void OncardIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> externalTsfrTypeID
        {
            get
            {
                return _externalTsfrTypeID;
            }
            set
            {
                OnexternalTsfrTypeIDChanging(value);
                ReportPropertyChanging("externalTsfrTypeID");
                _externalTsfrTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("externalTsfrTypeID");
                OnexternalTsfrTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _externalTsfrTypeID;
        partial void OnexternalTsfrTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnexternalTsfrTypeIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_externalTransfer_card", "card")]
        public card card
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<card>("accountingModel.FK_externalTransfer_card", "card").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<card>("accountingModel.FK_externalTransfer_card", "card").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<card> cardReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<card>("accountingModel.FK_externalTransfer_card", "card");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<card>("accountingModel.FK_externalTransfer_card", "card", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_creditTransfer_externalTransfer", "creditTransfer")]
        public EntityCollection<creditTransfer> creditTransfers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<creditTransfer>("accountingModel.FK_creditTransfer_externalTransfer", "creditTransfer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<creditTransfer>("accountingModel.FK_creditTransfer_externalTransfer", "creditTransfer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_debitTransfer_externalTransfer", "debitTransfer")]
        public EntityCollection<debitTransfer> debitTransfers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<debitTransfer>("accountingModel.FK_debitTransfer_externalTransfer", "debitTransfer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<debitTransfer>("accountingModel.FK_debitTransfer_externalTransfer", "debitTransfer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_externalTransfer_entity", "entity")]
        public entity entity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("accountingModel.FK_externalTransfer_entity", "entity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("accountingModel.FK_externalTransfer_entity", "entity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<entity> entityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("accountingModel.FK_externalTransfer_entity", "entity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<entity>("accountingModel.FK_externalTransfer_entity", "entity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_externalTransfer_transfer", "transfer")]
        public transfer transfer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<transfer>("accountingModel.FK_externalTransfer_transfer", "transfer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<transfer>("accountingModel.FK_externalTransfer_transfer", "transfer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<transfer> transferReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<transfer>("accountingModel.FK_externalTransfer_transfer", "transfer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<transfer>("accountingModel.FK_externalTransfer_transfer", "transfer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_externalTransfer_lu_externalTsfrType", "lu_externalTsfrType")]
        public lu_externalTsfrType lu_externalTsfrType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_externalTsfrType>("accountingModel.FK_externalTransfer_lu_externalTsfrType", "lu_externalTsfrType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_externalTsfrType>("accountingModel.FK_externalTransfer_lu_externalTsfrType", "lu_externalTsfrType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<lu_externalTsfrType> lu_externalTsfrTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_externalTsfrType>("accountingModel.FK_externalTransfer_lu_externalTsfrType", "lu_externalTsfrType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<lu_externalTsfrType>("accountingModel.FK_externalTransfer_lu_externalTsfrType", "lu_externalTsfrType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="accountingModel", Name="internalTransfer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class internalTransfer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new internalTransfer object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static internalTransfer CreateinternalTransfer(global::System.Int32 id)
        {
            internalTransfer internalTransfer = new internalTransfer();
            internalTransfer.ID = id;
            return internalTransfer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> transferID
        {
            get
            {
                return _transferID;
            }
            set
            {
                OntransferIDChanging(value);
                ReportPropertyChanging("transferID");
                _transferID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("transferID");
                OntransferIDChanged();
            }
        }
        private Nullable<global::System.Int32> _transferID;
        partial void OntransferIDChanging(Nullable<global::System.Int32> value);
        partial void OntransferIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_internalTransfer_transfer", "transfer")]
        public transfer transfer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<transfer>("accountingModel.FK_internalTransfer_transfer", "transfer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<transfer>("accountingModel.FK_internalTransfer_transfer", "transfer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<transfer> transferReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<transfer>("accountingModel.FK_internalTransfer_transfer", "transfer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<transfer>("accountingModel.FK_internalTransfer_transfer", "transfer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="accountingModel", Name="invoice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class invoice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new invoice object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static invoice Createinvoice(global::System.Int32 id)
        {
            invoice invoice = new invoice();
            invoice.ID = id;
            return invoice;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> entityID
        {
            get
            {
                return _entityID;
            }
            set
            {
                OnentityIDChanging(value);
                ReportPropertyChanging("entityID");
                _entityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("entityID");
                OnentityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _entityID;
        partial void OnentityIDChanging(Nullable<global::System.Int32> value);
        partial void OnentityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> issuerEntityID
        {
            get
            {
                return _issuerEntityID;
            }
            set
            {
                OnissuerEntityIDChanging(value);
                ReportPropertyChanging("issuerEntityID");
                _issuerEntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("issuerEntityID");
                OnissuerEntityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _issuerEntityID;
        partial void OnissuerEntityIDChanging(Nullable<global::System.Int32> value);
        partial void OnissuerEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> receiverEntityID
        {
            get
            {
                return _receiverEntityID;
            }
            set
            {
                OnreceiverEntityIDChanging(value);
                ReportPropertyChanging("receiverEntityID");
                _receiverEntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("receiverEntityID");
                OnreceiverEntityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _receiverEntityID;
        partial void OnreceiverEntityIDChanging(Nullable<global::System.Int32> value);
        partial void OnreceiverEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> currencyID
        {
            get
            {
                return _currencyID;
            }
            set
            {
                OncurrencyIDChanging(value);
                ReportPropertyChanging("currencyID");
                _currencyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("currencyID");
                OncurrencyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _currencyID;
        partial void OncurrencyIDChanging(Nullable<global::System.Int32> value);
        partial void OncurrencyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String note
        {
            get
            {
                return _note;
            }
            set
            {
                OnnoteChanging(value);
                ReportPropertyChanging("note");
                _note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("note");
                OnnoteChanged();
            }
        }
        private global::System.String _note;
        partial void OnnoteChanging(global::System.String value);
        partial void OnnoteChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_invoice_currency", "currency")]
        public currency currency
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<currency>("accountingModel.FK_invoice_currency", "currency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<currency>("accountingModel.FK_invoice_currency", "currency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<currency> currencyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<currency>("accountingModel.FK_invoice_currency", "currency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<currency>("accountingModel.FK_invoice_currency", "currency", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_invoice_entity", "entity")]
        public entity entity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("accountingModel.FK_invoice_entity", "entity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("accountingModel.FK_invoice_entity", "entity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<entity> entityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("accountingModel.FK_invoice_entity", "entity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<entity>("accountingModel.FK_invoice_entity", "entity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_invoice_entity1", "entity")]
        public entity entity1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("accountingModel.FK_invoice_entity1", "entity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("accountingModel.FK_invoice_entity1", "entity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<entity> entity1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("accountingModel.FK_invoice_entity1", "entity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<entity>("accountingModel.FK_invoice_entity1", "entity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_invoiceTransfer_invoice", "invoiceTransfer")]
        public EntityCollection<invoiceTransfer> invoiceTransfers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<invoiceTransfer>("accountingModel.FK_invoiceTransfer_invoice", "invoiceTransfer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<invoiceTransfer>("accountingModel.FK_invoiceTransfer_invoice", "invoiceTransfer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="accountingModel", Name="invoiceAction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class invoiceAction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new invoiceAction object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static invoiceAction CreateinvoiceAction(global::System.Int32 id)
        {
            invoiceAction invoiceAction = new invoiceAction();
            invoiceAction.ID = id;
            return invoiceAction;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> invoiceStatusID
        {
            get
            {
                return _invoiceStatusID;
            }
            set
            {
                OninvoiceStatusIDChanging(value);
                ReportPropertyChanging("invoiceStatusID");
                _invoiceStatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("invoiceStatusID");
                OninvoiceStatusIDChanged();
            }
        }
        private Nullable<global::System.Int32> _invoiceStatusID;
        partial void OninvoiceStatusIDChanging(Nullable<global::System.Int32> value);
        partial void OninvoiceStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> sysActionID
        {
            get
            {
                return _sysActionID;
            }
            set
            {
                OnsysActionIDChanging(value);
                ReportPropertyChanging("sysActionID");
                _sysActionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("sysActionID");
                OnsysActionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _sysActionID;
        partial void OnsysActionIDChanging(Nullable<global::System.Int32> value);
        partial void OnsysActionIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_invoiceAction_lu_invoiceStatus", "lu_invoiceStatus")]
        public lu_invoiceStatus lu_invoiceStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_invoiceStatus>("accountingModel.FK_invoiceAction_lu_invoiceStatus", "lu_invoiceStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_invoiceStatus>("accountingModel.FK_invoiceAction_lu_invoiceStatus", "lu_invoiceStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<lu_invoiceStatus> lu_invoiceStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_invoiceStatus>("accountingModel.FK_invoiceAction_lu_invoiceStatus", "lu_invoiceStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<lu_invoiceStatus>("accountingModel.FK_invoiceAction_lu_invoiceStatus", "lu_invoiceStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_invoiceAction_sysAction", "sysAction")]
        public sysAction sysAction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<sysAction>("accountingModel.FK_invoiceAction_sysAction", "sysAction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<sysAction>("accountingModel.FK_invoiceAction_sysAction", "sysAction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<sysAction> sysActionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<sysAction>("accountingModel.FK_invoiceAction_sysAction", "sysAction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<sysAction>("accountingModel.FK_invoiceAction_sysAction", "sysAction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="accountingModel", Name="invoiceTransfer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class invoiceTransfer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new invoiceTransfer object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static invoiceTransfer CreateinvoiceTransfer(global::System.Int32 id)
        {
            invoiceTransfer invoiceTransfer = new invoiceTransfer();
            invoiceTransfer.ID = id;
            return invoiceTransfer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> invoiceID
        {
            get
            {
                return _invoiceID;
            }
            set
            {
                OninvoiceIDChanging(value);
                ReportPropertyChanging("invoiceID");
                _invoiceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("invoiceID");
                OninvoiceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _invoiceID;
        partial void OninvoiceIDChanging(Nullable<global::System.Int32> value);
        partial void OninvoiceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> transferID
        {
            get
            {
                return _transferID;
            }
            set
            {
                OntransferIDChanging(value);
                ReportPropertyChanging("transferID");
                _transferID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("transferID");
                OntransferIDChanged();
            }
        }
        private Nullable<global::System.Int32> _transferID;
        partial void OntransferIDChanging(Nullable<global::System.Int32> value);
        partial void OntransferIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_invoiceTransfer_invoice", "invoice")]
        public invoice invoice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<invoice>("accountingModel.FK_invoiceTransfer_invoice", "invoice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<invoice>("accountingModel.FK_invoiceTransfer_invoice", "invoice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<invoice> invoiceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<invoice>("accountingModel.FK_invoiceTransfer_invoice", "invoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<invoice>("accountingModel.FK_invoiceTransfer_invoice", "invoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_invoiceTransfer_transfer", "transfer")]
        public transfer transfer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<transfer>("accountingModel.FK_invoiceTransfer_transfer", "transfer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<transfer>("accountingModel.FK_invoiceTransfer_transfer", "transfer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<transfer> transferReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<transfer>("accountingModel.FK_invoiceTransfer_transfer", "transfer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<transfer>("accountingModel.FK_invoiceTransfer_transfer", "transfer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="accountingModel", Name="lu_cardType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class lu_cardType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new lu_cardType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static lu_cardType Createlu_cardType(global::System.Int32 id)
        {
            lu_cardType lu_cardType = new lu_cardType();
            lu_cardType.ID = id;
            return lu_cardType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_card_lu_cardType", "card")]
        public EntityCollection<card> cards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<card>("accountingModel.FK_card_lu_cardType", "card");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<card>("accountingModel.FK_card_lu_cardType", "card", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="accountingModel", Name="lu_catType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class lu_catType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new lu_catType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static lu_catType Createlu_catType(global::System.Int32 id)
        {
            lu_catType lu_catType = new lu_catType();
            lu_catType.ID = id;
            return lu_catType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> glTypeID
        {
            get
            {
                return _glTypeID;
            }
            set
            {
                OnglTypeIDChanging(value);
                ReportPropertyChanging("glTypeID");
                _glTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("glTypeID");
                OnglTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _glTypeID;
        partial void OnglTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnglTypeIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_account_lu_catType", "account")]
        public EntityCollection<account> accounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<account>("accountingModel.FK_account_lu_catType", "account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<account>("accountingModel.FK_account_lu_catType", "account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_lu_catType_lu_glType", "lu_glType")]
        public lu_glType lu_glType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_glType>("accountingModel.FK_lu_catType_lu_glType", "lu_glType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_glType>("accountingModel.FK_lu_catType_lu_glType", "lu_glType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<lu_glType> lu_glTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_glType>("accountingModel.FK_lu_catType_lu_glType", "lu_glType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<lu_glType>("accountingModel.FK_lu_catType_lu_glType", "lu_glType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="accountingModel", Name="lu_ccCardType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class lu_ccCardType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new lu_ccCardType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static lu_ccCardType Createlu_ccCardType(global::System.Int32 id)
        {
            lu_ccCardType lu_ccCardType = new lu_ccCardType();
            lu_ccCardType.ID = id;
            return lu_ccCardType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_ccCard_lu_ccCardType", "ccCard")]
        public EntityCollection<ccCard> ccCards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ccCard>("accountingModel.FK_ccCard_lu_ccCardType", "ccCard");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ccCard>("accountingModel.FK_ccCard_lu_ccCardType", "ccCard", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_debitCard_lu_ccCardType", "debitCard")]
        public EntityCollection<debitCard> debitCards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<debitCard>("accountingModel.FK_debitCard_lu_ccCardType", "debitCard");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<debitCard>("accountingModel.FK_debitCard_lu_ccCardType", "debitCard", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="accountingModel", Name="lu_contactType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class lu_contactType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new lu_contactType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static lu_contactType Createlu_contactType(global::System.Int32 id)
        {
            lu_contactType lu_contactType = new lu_contactType();
            lu_contactType.ID = id;
            return lu_contactType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_contact_lu_contactType", "contact")]
        public EntityCollection<contact> contacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<contact>("accountingModel.FK_contact_lu_contactType", "contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<contact>("accountingModel.FK_contact_lu_contactType", "contact", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="accountingModel", Name="lu_currencyType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class lu_currencyType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new lu_currencyType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static lu_currencyType Createlu_currencyType(global::System.Int32 id)
        {
            lu_currencyType lu_currencyType = new lu_currencyType();
            lu_currencyType.ID = id;
            return lu_currencyType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_currency_lu_currencyType", "currency")]
        public EntityCollection<currency> currencies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<currency>("accountingModel.FK_currency_lu_currencyType", "currency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<currency>("accountingModel.FK_currency_lu_currencyType", "currency", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="accountingModel", Name="lu_deliverableType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class lu_deliverableType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new lu_deliverableType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static lu_deliverableType Createlu_deliverableType(global::System.Int32 id)
        {
            lu_deliverableType lu_deliverableType = new lu_deliverableType();
            lu_deliverableType.ID = id;
            return lu_deliverableType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_deliverable_lu_deliverableType", "deliverable")]
        public EntityCollection<deliverable> deliverables
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<deliverable>("accountingModel.FK_deliverable_lu_deliverableType", "deliverable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<deliverable>("accountingModel.FK_deliverable_lu_deliverableType", "deliverable", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="accountingModel", Name="lu_entityType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class lu_entityType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new lu_entityType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static lu_entityType Createlu_entityType(global::System.Int32 id)
        {
            lu_entityType lu_entityType = new lu_entityType();
            lu_entityType.ID = id;
            return lu_entityType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_entity_lu_entityType", "entity")]
        public EntityCollection<entity> entities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<entity>("accountingModel.FK_entity_lu_entityType", "entity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<entity>("accountingModel.FK_entity_lu_entityType", "entity", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="accountingModel", Name="lu_externalTsfrType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class lu_externalTsfrType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new lu_externalTsfrType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static lu_externalTsfrType Createlu_externalTsfrType(global::System.Int32 id)
        {
            lu_externalTsfrType lu_externalTsfrType = new lu_externalTsfrType();
            lu_externalTsfrType.ID = id;
            return lu_externalTsfrType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_externalTransfer_lu_externalTsfrType", "externalTransfer")]
        public EntityCollection<externalTransfer> externalTransfers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<externalTransfer>("accountingModel.FK_externalTransfer_lu_externalTsfrType", "externalTransfer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<externalTransfer>("accountingModel.FK_externalTransfer_lu_externalTsfrType", "externalTransfer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="accountingModel", Name="lu_glType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class lu_glType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new lu_glType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static lu_glType Createlu_glType(global::System.Int32 id)
        {
            lu_glType lu_glType = new lu_glType();
            lu_glType.ID = id;
            return lu_glType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_lu_catType_lu_glType", "lu_catType")]
        public EntityCollection<lu_catType> lu_catType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<lu_catType>("accountingModel.FK_lu_catType_lu_glType", "lu_catType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<lu_catType>("accountingModel.FK_lu_catType_lu_glType", "lu_catType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="accountingModel", Name="lu_invoiceStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class lu_invoiceStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new lu_invoiceStatus object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static lu_invoiceStatus Createlu_invoiceStatus(global::System.Int32 id)
        {
            lu_invoiceStatus lu_invoiceStatus = new lu_invoiceStatus();
            lu_invoiceStatus.ID = id;
            return lu_invoiceStatus;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_invoiceAction_lu_invoiceStatus", "invoiceAction")]
        public EntityCollection<invoiceAction> invoiceActions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<invoiceAction>("accountingModel.FK_invoiceAction_lu_invoiceStatus", "invoiceAction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<invoiceAction>("accountingModel.FK_invoiceAction_lu_invoiceStatus", "invoiceAction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="accountingModel", Name="lu_sysActionType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class lu_sysActionType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new lu_sysActionType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static lu_sysActionType Createlu_sysActionType(global::System.Int32 id)
        {
            lu_sysActionType lu_sysActionType = new lu_sysActionType();
            lu_sysActionType.ID = id;
            return lu_sysActionType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_sysAction_lu_sysActionType", "sysAction")]
        public EntityCollection<sysAction> sysActions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<sysAction>("accountingModel.FK_sysAction_lu_sysActionType", "sysAction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<sysAction>("accountingModel.FK_sysAction_lu_sysActionType", "sysAction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="accountingModel", Name="lu_transferStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class lu_transferStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new lu_transferStatus object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static lu_transferStatus Createlu_transferStatus(global::System.Int32 id)
        {
            lu_transferStatus lu_transferStatus = new lu_transferStatus();
            lu_transferStatus.ID = id;
            return lu_transferStatus;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_transferAction_lu_transferStatus", "transferAction")]
        public EntityCollection<transferAction> transferActions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<transferAction>("accountingModel.FK_transferAction_lu_transferStatus", "transferAction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<transferAction>("accountingModel.FK_transferAction_lu_transferStatus", "transferAction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="accountingModel", Name="lu_transferType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class lu_transferType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new lu_transferType object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static lu_transferType Createlu_transferType(global::System.Int32 id)
        {
            lu_transferType lu_transferType = new lu_transferType();
            lu_transferType.ID = id;
            return lu_transferType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_transfer_lu_transferType", "transfer")]
        public EntityCollection<transfer> transfers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<transfer>("accountingModel.FK_transfer_lu_transferType", "transfer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<transfer>("accountingModel.FK_transfer_lu_transferType", "transfer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="accountingModel", Name="order")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class order : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new order object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static order Createorder(global::System.Int32 id)
        {
            order order = new order();
            order.ID = id;
            return order;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> issuerEntityID
        {
            get
            {
                return _issuerEntityID;
            }
            set
            {
                OnissuerEntityIDChanging(value);
                ReportPropertyChanging("issuerEntityID");
                _issuerEntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("issuerEntityID");
                OnissuerEntityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _issuerEntityID;
        partial void OnissuerEntityIDChanging(Nullable<global::System.Int32> value);
        partial void OnissuerEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> receiverEntityID
        {
            get
            {
                return _receiverEntityID;
            }
            set
            {
                OnreceiverEntityIDChanging(value);
                ReportPropertyChanging("receiverEntityID");
                _receiverEntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("receiverEntityID");
                OnreceiverEntityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _receiverEntityID;
        partial void OnreceiverEntityIDChanging(Nullable<global::System.Int32> value);
        partial void OnreceiverEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> orderDate
        {
            get
            {
                return _orderDate;
            }
            set
            {
                OnorderDateChanging(value);
                ReportPropertyChanging("orderDate");
                _orderDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("orderDate");
                OnorderDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _orderDate;
        partial void OnorderDateChanging(Nullable<global::System.DateTime> value);
        partial void OnorderDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> shippedDate
        {
            get
            {
                return _shippedDate;
            }
            set
            {
                OnshippedDateChanging(value);
                ReportPropertyChanging("shippedDate");
                _shippedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("shippedDate");
                OnshippedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _shippedDate;
        partial void OnshippedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnshippedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> carrierID
        {
            get
            {
                return _carrierID;
            }
            set
            {
                OncarrierIDChanging(value);
                ReportPropertyChanging("carrierID");
                _carrierID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("carrierID");
                OncarrierIDChanged();
            }
        }
        private Nullable<global::System.Int32> _carrierID;
        partial void OncarrierIDChanging(Nullable<global::System.Int32> value);
        partial void OncarrierIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> addressID
        {
            get
            {
                return _addressID;
            }
            set
            {
                OnaddressIDChanging(value);
                ReportPropertyChanging("addressID");
                _addressID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("addressID");
                OnaddressIDChanged();
            }
        }
        private Nullable<global::System.Int32> _addressID;
        partial void OnaddressIDChanging(Nullable<global::System.Int32> value);
        partial void OnaddressIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_order_address", "address")]
        public address address
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<address>("accountingModel.FK_order_address", "address").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<address>("accountingModel.FK_order_address", "address").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<address> addressReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<address>("accountingModel.FK_order_address", "address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<address>("accountingModel.FK_order_address", "address", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_order_carrier", "carrier")]
        public carrier carrier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<carrier>("accountingModel.FK_order_carrier", "carrier").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<carrier>("accountingModel.FK_order_carrier", "carrier").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<carrier> carrierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<carrier>("accountingModel.FK_order_carrier", "carrier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<carrier>("accountingModel.FK_order_carrier", "carrier", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_order_entity", "entity")]
        public entity entity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("accountingModel.FK_order_entity", "entity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("accountingModel.FK_order_entity", "entity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<entity> entityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("accountingModel.FK_order_entity", "entity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<entity>("accountingModel.FK_order_entity", "entity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_order_entity1", "entity")]
        public entity entity1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("accountingModel.FK_order_entity1", "entity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("accountingModel.FK_order_entity1", "entity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<entity> entity1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("accountingModel.FK_order_entity1", "entity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<entity>("accountingModel.FK_order_entity1", "entity", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="accountingModel", Name="orderDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class orderDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new orderDetail object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static orderDetail CreateorderDetail(global::System.Int32 id)
        {
            orderDetail orderDetail = new orderDetail();
            orderDetail.ID = id;
            return orderDetail;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> deliverableID
        {
            get
            {
                return _deliverableID;
            }
            set
            {
                OndeliverableIDChanging(value);
                ReportPropertyChanging("deliverableID");
                _deliverableID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("deliverableID");
                OndeliverableIDChanged();
            }
        }
        private Nullable<global::System.Int32> _deliverableID;
        partial void OndeliverableIDChanging(Nullable<global::System.Int32> value);
        partial void OndeliverableIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> unitPrice
        {
            get
            {
                return _unitPrice;
            }
            set
            {
                OnunitPriceChanging(value);
                ReportPropertyChanging("unitPrice");
                _unitPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("unitPrice");
                OnunitPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _unitPrice;
        partial void OnunitPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnunitPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> quantity
        {
            get
            {
                return _quantity;
            }
            set
            {
                OnquantityChanging(value);
                ReportPropertyChanging("quantity");
                _quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("quantity");
                OnquantityChanged();
            }
        }
        private Nullable<global::System.Int32> _quantity;
        partial void OnquantityChanging(Nullable<global::System.Int32> value);
        partial void OnquantityChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_orderDetail_deliverable", "deliverable")]
        public deliverable deliverable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<deliverable>("accountingModel.FK_orderDetail_deliverable", "deliverable").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<deliverable>("accountingModel.FK_orderDetail_deliverable", "deliverable").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<deliverable> deliverableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<deliverable>("accountingModel.FK_orderDetail_deliverable", "deliverable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<deliverable>("accountingModel.FK_orderDetail_deliverable", "deliverable", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="accountingModel", Name="organization")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class organization : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new organization object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static organization Createorganization(global::System.Int32 id)
        {
            organization organization = new organization();
            organization.ID = id;
            return organization;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> entityID
        {
            get
            {
                return _entityID;
            }
            set
            {
                OnentityIDChanging(value);
                ReportPropertyChanging("entityID");
                _entityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("entityID");
                OnentityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _entityID;
        partial void OnentityIDChanging(Nullable<global::System.Int32> value);
        partial void OnentityIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_carrier_organization", "carrier")]
        public EntityCollection<carrier> carriers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<carrier>("accountingModel.FK_carrier_organization", "carrier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<carrier>("accountingModel.FK_carrier_organization", "carrier", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_customer_organization", "customer")]
        public EntityCollection<customer> customers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<customer>("accountingModel.FK_customer_organization", "customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<customer>("accountingModel.FK_customer_organization", "customer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_organization_entity", "entity")]
        public entity entity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("accountingModel.FK_organization_entity", "entity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("accountingModel.FK_organization_entity", "entity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<entity> entityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("accountingModel.FK_organization_entity", "entity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<entity>("accountingModel.FK_organization_entity", "entity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_supplier_organization", "supplier")]
        public EntityCollection<supplier> suppliers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<supplier>("accountingModel.FK_supplier_organization", "supplier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<supplier>("accountingModel.FK_supplier_organization", "supplier", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="accountingModel", Name="person")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class person : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new person object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static person Createperson(global::System.Int32 id)
        {
            person person = new person();
            person.ID = id;
            return person;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String firstname
        {
            get
            {
                return _firstname;
            }
            set
            {
                OnfirstnameChanging(value);
                ReportPropertyChanging("firstname");
                _firstname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("firstname");
                OnfirstnameChanged();
            }
        }
        private global::System.String _firstname;
        partial void OnfirstnameChanging(global::System.String value);
        partial void OnfirstnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String lastname
        {
            get
            {
                return _lastname;
            }
            set
            {
                OnlastnameChanging(value);
                ReportPropertyChanging("lastname");
                _lastname = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("lastname");
                OnlastnameChanged();
            }
        }
        private global::System.String _lastname;
        partial void OnlastnameChanging(global::System.String value);
        partial void OnlastnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> entityID
        {
            get
            {
                return _entityID;
            }
            set
            {
                OnentityIDChanging(value);
                ReportPropertyChanging("entityID");
                _entityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("entityID");
                OnentityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _entityID;
        partial void OnentityIDChanging(Nullable<global::System.Int32> value);
        partial void OnentityIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_person_entity", "entity")]
        public entity entity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("accountingModel.FK_person_entity", "entity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("accountingModel.FK_person_entity", "entity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<entity> entityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("accountingModel.FK_person_entity", "entity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<entity>("accountingModel.FK_person_entity", "entity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_user_person", "user")]
        public EntityCollection<user> users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<user>("accountingModel.FK_user_person", "user");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<user>("accountingModel.FK_user_person", "user", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="accountingModel", Name="product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class product : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new product object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static product Createproduct(global::System.Int32 id)
        {
            product product = new product();
            product.ID = id;
            return product;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> deliverableID
        {
            get
            {
                return _deliverableID;
            }
            set
            {
                OndeliverableIDChanging(value);
                ReportPropertyChanging("deliverableID");
                _deliverableID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("deliverableID");
                OndeliverableIDChanged();
            }
        }
        private Nullable<global::System.Int32> _deliverableID;
        partial void OndeliverableIDChanging(Nullable<global::System.Int32> value);
        partial void OndeliverableIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_product_deliverable", "deliverable")]
        public deliverable deliverable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<deliverable>("accountingModel.FK_product_deliverable", "deliverable").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<deliverable>("accountingModel.FK_product_deliverable", "deliverable").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<deliverable> deliverableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<deliverable>("accountingModel.FK_product_deliverable", "deliverable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<deliverable>("accountingModel.FK_product_deliverable", "deliverable", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="accountingModel", Name="service")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class service : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new service object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static service Createservice(global::System.Int32 id)
        {
            service service = new service();
            service.ID = id;
            return service;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private Nullable<global::System.Int32> _name;
        partial void OnnameChanging(Nullable<global::System.Int32> value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> deliverableID
        {
            get
            {
                return _deliverableID;
            }
            set
            {
                OndeliverableIDChanging(value);
                ReportPropertyChanging("deliverableID");
                _deliverableID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("deliverableID");
                OndeliverableIDChanged();
            }
        }
        private Nullable<global::System.Int32> _deliverableID;
        partial void OndeliverableIDChanging(Nullable<global::System.Int32> value);
        partial void OndeliverableIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_service_deliverable", "deliverable")]
        public deliverable deliverable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<deliverable>("accountingModel.FK_service_deliverable", "deliverable").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<deliverable>("accountingModel.FK_service_deliverable", "deliverable").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<deliverable> deliverableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<deliverable>("accountingModel.FK_service_deliverable", "deliverable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<deliverable>("accountingModel.FK_service_deliverable", "deliverable", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="accountingModel", Name="supplier")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class supplier : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new supplier object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static supplier Createsupplier(global::System.Int32 id)
        {
            supplier supplier = new supplier();
            supplier.ID = id;
            return supplier;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> orgID
        {
            get
            {
                return _orgID;
            }
            set
            {
                OnorgIDChanging(value);
                ReportPropertyChanging("orgID");
                _orgID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("orgID");
                OnorgIDChanged();
            }
        }
        private Nullable<global::System.Int32> _orgID;
        partial void OnorgIDChanging(Nullable<global::System.Int32> value);
        partial void OnorgIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_deliverable_supplier", "deliverable")]
        public EntityCollection<deliverable> deliverables
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<deliverable>("accountingModel.FK_deliverable_supplier", "deliverable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<deliverable>("accountingModel.FK_deliverable_supplier", "deliverable", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_supplier_organization", "organization")]
        public organization organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<organization>("accountingModel.FK_supplier_organization", "organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<organization>("accountingModel.FK_supplier_organization", "organization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<organization> organizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<organization>("accountingModel.FK_supplier_organization", "organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<organization>("accountingModel.FK_supplier_organization", "organization", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="accountingModel", Name="sysAction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysAction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysAction object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static sysAction CreatesysAction(global::System.Int32 id)
        {
            sysAction sysAction = new sysAction();
            sysAction.ID = id;
            return sysAction;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> sysActionTypeID
        {
            get
            {
                return _sysActionTypeID;
            }
            set
            {
                OnsysActionTypeIDChanging(value);
                ReportPropertyChanging("sysActionTypeID");
                _sysActionTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("sysActionTypeID");
                OnsysActionTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _sysActionTypeID;
        partial void OnsysActionTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnsysActionTypeIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_invoiceAction_sysAction", "invoiceAction")]
        public EntityCollection<invoiceAction> invoiceActions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<invoiceAction>("accountingModel.FK_invoiceAction_sysAction", "invoiceAction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<invoiceAction>("accountingModel.FK_invoiceAction_sysAction", "invoiceAction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_sysActionTransaction_sysAction", "sysActionTransaction")]
        public EntityCollection<sysActionTransaction> sysActionTransactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<sysActionTransaction>("accountingModel.FK_sysActionTransaction_sysAction", "sysActionTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<sysActionTransaction>("accountingModel.FK_sysActionTransaction_sysAction", "sysActionTransaction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_transferAction_sysAction", "transferAction")]
        public EntityCollection<transferAction> transferActions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<transferAction>("accountingModel.FK_transferAction_sysAction", "transferAction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<transferAction>("accountingModel.FK_transferAction_sysAction", "transferAction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_sysAction_lu_sysActionType", "lu_sysActionType")]
        public lu_sysActionType lu_sysActionType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_sysActionType>("accountingModel.FK_sysAction_lu_sysActionType", "lu_sysActionType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_sysActionType>("accountingModel.FK_sysAction_lu_sysActionType", "lu_sysActionType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<lu_sysActionType> lu_sysActionTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_sysActionType>("accountingModel.FK_sysAction_lu_sysActionType", "lu_sysActionType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<lu_sysActionType>("accountingModel.FK_sysAction_lu_sysActionType", "lu_sysActionType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="accountingModel", Name="sysActionTransaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysActionTransaction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysActionTransaction object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static sysActionTransaction CreatesysActionTransaction(global::System.Int32 id)
        {
            sysActionTransaction sysActionTransaction = new sysActionTransaction();
            sysActionTransaction.ID = id;
            return sysActionTransaction;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> sysActionID
        {
            get
            {
                return _sysActionID;
            }
            set
            {
                OnsysActionIDChanging(value);
                ReportPropertyChanging("sysActionID");
                _sysActionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("sysActionID");
                OnsysActionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _sysActionID;
        partial void OnsysActionIDChanging(Nullable<global::System.Int32> value);
        partial void OnsysActionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> transactionID
        {
            get
            {
                return _transactionID;
            }
            set
            {
                OntransactionIDChanging(value);
                ReportPropertyChanging("transactionID");
                _transactionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("transactionID");
                OntransactionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _transactionID;
        partial void OntransactionIDChanging(Nullable<global::System.Int32> value);
        partial void OntransactionIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_sysActionTransaction_sysAction", "sysAction")]
        public sysAction sysAction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<sysAction>("accountingModel.FK_sysActionTransaction_sysAction", "sysAction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<sysAction>("accountingModel.FK_sysActionTransaction_sysAction", "sysAction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<sysAction> sysActionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<sysAction>("accountingModel.FK_sysActionTransaction_sysAction", "sysAction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<sysAction>("accountingModel.FK_sysActionTransaction_sysAction", "sysAction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_sysActionTransaction_transaction", "transaction")]
        public transaction transaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<transaction>("accountingModel.FK_sysActionTransaction_transaction", "transaction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<transaction>("accountingModel.FK_sysActionTransaction_transaction", "transaction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<transaction> transactionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<transaction>("accountingModel.FK_sysActionTransaction_transaction", "transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<transaction>("accountingModel.FK_sysActionTransaction_transaction", "transaction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="accountingModel", Name="transaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class transaction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new transaction object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static transaction Createtransaction(global::System.Int32 id)
        {
            transaction transaction = new transaction();
            transaction.ID = id;
            return transaction;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> accountID
        {
            get
            {
                return _accountID;
            }
            set
            {
                OnaccountIDChanging(value);
                ReportPropertyChanging("accountID");
                _accountID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("accountID");
                OnaccountIDChanged();
            }
        }
        private Nullable<global::System.Int32> _accountID;
        partial void OnaccountIDChanging(Nullable<global::System.Int32> value);
        partial void OnaccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> amount
        {
            get
            {
                return _amount;
            }
            set
            {
                OnamountChanging(value);
                ReportPropertyChanging("amount");
                _amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("amount");
                OnamountChanged();
            }
        }
        private Nullable<global::System.Decimal> _amount;
        partial void OnamountChanging(Nullable<global::System.Decimal> value);
        partial void OnamountChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_transaction_account", "account")]
        public account account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<account>("accountingModel.FK_transaction_account", "account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<account>("accountingModel.FK_transaction_account", "account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<account> accountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<account>("accountingModel.FK_transaction_account", "account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<account>("accountingModel.FK_transaction_account", "account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_sysActionTransaction_transaction", "sysActionTransaction")]
        public EntityCollection<sysActionTransaction> sysActionTransactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<sysActionTransaction>("accountingModel.FK_sysActionTransaction_transaction", "sysActionTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<sysActionTransaction>("accountingModel.FK_sysActionTransaction_transaction", "sysActionTransaction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="accountingModel", Name="transfer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class transfer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new transfer object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static transfer Createtransfer(global::System.Int32 id)
        {
            transfer transfer = new transfer();
            transfer.ID = id;
            return transfer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> issuerEntityID
        {
            get
            {
                return _issuerEntityID;
            }
            set
            {
                OnissuerEntityIDChanging(value);
                ReportPropertyChanging("issuerEntityID");
                _issuerEntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("issuerEntityID");
                OnissuerEntityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _issuerEntityID;
        partial void OnissuerEntityIDChanging(Nullable<global::System.Int32> value);
        partial void OnissuerEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> receiverEntityID
        {
            get
            {
                return _receiverEntityID;
            }
            set
            {
                OnreceiverEntityIDChanging(value);
                ReportPropertyChanging("receiverEntityID");
                _receiverEntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("receiverEntityID");
                OnreceiverEntityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _receiverEntityID;
        partial void OnreceiverEntityIDChanging(Nullable<global::System.Int32> value);
        partial void OnreceiverEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> transferTypeID
        {
            get
            {
                return _transferTypeID;
            }
            set
            {
                OntransferTypeIDChanging(value);
                ReportPropertyChanging("transferTypeID");
                _transferTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("transferTypeID");
                OntransferTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _transferTypeID;
        partial void OntransferTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OntransferTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> currencyID
        {
            get
            {
                return _currencyID;
            }
            set
            {
                OncurrencyIDChanging(value);
                ReportPropertyChanging("currencyID");
                _currencyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("currencyID");
                OncurrencyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _currencyID;
        partial void OncurrencyIDChanging(Nullable<global::System.Int32> value);
        partial void OncurrencyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> amount
        {
            get
            {
                return _amount;
            }
            set
            {
                OnamountChanging(value);
                ReportPropertyChanging("amount");
                _amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("amount");
                OnamountChanged();
            }
        }
        private Nullable<global::System.Decimal> _amount;
        partial void OnamountChanging(Nullable<global::System.Decimal> value);
        partial void OnamountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> entityID
        {
            get
            {
                return _entityID;
            }
            set
            {
                OnentityIDChanging(value);
                ReportPropertyChanging("entityID");
                _entityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("entityID");
                OnentityIDChanged();
            }
        }
        private Nullable<global::System.Int32> _entityID;
        partial void OnentityIDChanging(Nullable<global::System.Int32> value);
        partial void OnentityIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_transfer_currency", "currency")]
        public currency currency
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<currency>("accountingModel.FK_transfer_currency", "currency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<currency>("accountingModel.FK_transfer_currency", "currency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<currency> currencyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<currency>("accountingModel.FK_transfer_currency", "currency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<currency>("accountingModel.FK_transfer_currency", "currency", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_transfer_entity", "entity")]
        public entity entity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("accountingModel.FK_transfer_entity", "entity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("accountingModel.FK_transfer_entity", "entity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<entity> entityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("accountingModel.FK_transfer_entity", "entity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<entity>("accountingModel.FK_transfer_entity", "entity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_transfer_entity1", "entity")]
        public entity entity1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("accountingModel.FK_transfer_entity1", "entity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("accountingModel.FK_transfer_entity1", "entity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<entity> entity1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("accountingModel.FK_transfer_entity1", "entity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<entity>("accountingModel.FK_transfer_entity1", "entity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_externalTransfer_transfer", "externalTransfer")]
        public EntityCollection<externalTransfer> externalTransfers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<externalTransfer>("accountingModel.FK_externalTransfer_transfer", "externalTransfer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<externalTransfer>("accountingModel.FK_externalTransfer_transfer", "externalTransfer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_internalTransfer_transfer", "internalTransfer")]
        public EntityCollection<internalTransfer> internalTransfers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<internalTransfer>("accountingModel.FK_internalTransfer_transfer", "internalTransfer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<internalTransfer>("accountingModel.FK_internalTransfer_transfer", "internalTransfer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_invoiceTransfer_transfer", "invoiceTransfer")]
        public EntityCollection<invoiceTransfer> invoiceTransfers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<invoiceTransfer>("accountingModel.FK_invoiceTransfer_transfer", "invoiceTransfer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<invoiceTransfer>("accountingModel.FK_invoiceTransfer_transfer", "invoiceTransfer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_transfer_lu_transferType", "lu_transferType")]
        public lu_transferType lu_transferType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_transferType>("accountingModel.FK_transfer_lu_transferType", "lu_transferType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_transferType>("accountingModel.FK_transfer_lu_transferType", "lu_transferType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<lu_transferType> lu_transferTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_transferType>("accountingModel.FK_transfer_lu_transferType", "lu_transferType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<lu_transferType>("accountingModel.FK_transfer_lu_transferType", "lu_transferType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_transfer_entity2", "entity")]
        public entity entity2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("accountingModel.FK_transfer_entity2", "entity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("accountingModel.FK_transfer_entity2", "entity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<entity> entity2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<entity>("accountingModel.FK_transfer_entity2", "entity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<entity>("accountingModel.FK_transfer_entity2", "entity", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="accountingModel", Name="transferAction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class transferAction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new transferAction object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static transferAction CreatetransferAction(global::System.Int32 id)
        {
            transferAction transferAction = new transferAction();
            transferAction.ID = id;
            return transferAction;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> transferStatusID
        {
            get
            {
                return _transferStatusID;
            }
            set
            {
                OntransferStatusIDChanging(value);
                ReportPropertyChanging("transferStatusID");
                _transferStatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("transferStatusID");
                OntransferStatusIDChanged();
            }
        }
        private Nullable<global::System.Int32> _transferStatusID;
        partial void OntransferStatusIDChanging(Nullable<global::System.Int32> value);
        partial void OntransferStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> sysActionID
        {
            get
            {
                return _sysActionID;
            }
            set
            {
                OnsysActionIDChanging(value);
                ReportPropertyChanging("sysActionID");
                _sysActionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("sysActionID");
                OnsysActionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _sysActionID;
        partial void OnsysActionIDChanging(Nullable<global::System.Int32> value);
        partial void OnsysActionIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_transferAction_lu_transferStatus", "lu_transferStatus")]
        public lu_transferStatus lu_transferStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_transferStatus>("accountingModel.FK_transferAction_lu_transferStatus", "lu_transferStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_transferStatus>("accountingModel.FK_transferAction_lu_transferStatus", "lu_transferStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<lu_transferStatus> lu_transferStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<lu_transferStatus>("accountingModel.FK_transferAction_lu_transferStatus", "lu_transferStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<lu_transferStatus>("accountingModel.FK_transferAction_lu_transferStatus", "lu_transferStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_transferAction_sysAction", "sysAction")]
        public sysAction sysAction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<sysAction>("accountingModel.FK_transferAction_sysAction", "sysAction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<sysAction>("accountingModel.FK_transferAction_sysAction", "sysAction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<sysAction> sysActionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<sysAction>("accountingModel.FK_transferAction_sysAction", "sysAction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<sysAction>("accountingModel.FK_transferAction_sysAction", "sysAction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="accountingModel", Name="user")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class user : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new user object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static user Createuser(global::System.Int32 id)
        {
            user user = new user();
            user.ID = id;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> personID
        {
            get
            {
                return _personID;
            }
            set
            {
                OnpersonIDChanging(value);
                ReportPropertyChanging("personID");
                _personID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("personID");
                OnpersonIDChanged();
            }
        }
        private Nullable<global::System.Int32> _personID;
        partial void OnpersonIDChanging(Nullable<global::System.Int32> value);
        partial void OnpersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String password
        {
            get
            {
                return _password;
            }
            set
            {
                OnpasswordChanging(value);
                ReportPropertyChanging("password");
                _password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("password");
                OnpasswordChanged();
            }
        }
        private global::System.String _password;
        partial void OnpasswordChanging(global::System.String value);
        partial void OnpasswordChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("accountingModel", "FK_user_person", "person")]
        public person person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<person>("accountingModel.FK_user_person", "person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<person>("accountingModel.FK_user_person", "person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<person> personReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<person>("accountingModel.FK_user_person", "person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<person>("accountingModel.FK_user_person", "person", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
